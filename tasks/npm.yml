---
- name: Optional npm global packages
  npm:
    global: "yes"
    name: "{{ item }}"
  become: "yes"
  with_items: "{{ django_stack_npm_global_pkgs }}"

# Prepare NodeJS NPM dependencies in a local container, running
# on the Ansible controller. Since the NPM install command can
# take a while, we'll wait for a file to be touched after the
# npm install command exits.
- block:
    - name: Check for existence of grsec kernel
      stat:
        path: /proc/sys/kernel/grsecurity/
      register: check_grsec_kernel_results

    - name: If grsec, add paxflags cmd to node
      set_fact:
        node_grsec_image: "node_grsec"
      when: check_grsec_kernel_results.stat.exists

    - name: Prepare node image with pax flags
      docker_image:
        name: "{{ node_grsec_image|default('node') }}:{{ django_stack_node_ver }}"
        dockerfile: "{{ django_stack_node_dockerfile }}"
        path: "{{ django_stack_node_dockercontext }}"
        tag: "{{ django_stack_node_ver }}"
        force: yes

    - name: Node local docker builder
      docker_container:
        name: django_stack_node
        image: "{{ node_grsec_image|default('node') }}:{{ django_stack_node_ver }}"
        volumes:
          - "{{ tmp_dir_git }}:{{ active_deploy_dir }}"
          - "{{ tmp_dir }}:/status"
        state: started
        working_dir: "{{ active_deploy_dir }}"
        command: /bin/ash -c "{{ django_stack_npm_install_cmd }}"
        user: "{{ 'node' if (lookup('pipe','id -u') == '1000') else omit }}"
        # Block until command is finished; report failure on error
        detach: no
        recreate: "yes"
        keep_volumes: no

  become: "no"
  delegate_to: localhost
  when: django_stack_npm_install_cmd != ''
