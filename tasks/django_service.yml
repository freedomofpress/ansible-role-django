---

- name: Install system dependencies
  package:
    name: "{{ item }}"
  with_items: ["{{ django_stack_pkgs }}"]
  tags: ['pkgs']

- block:
    - name: Setup virtualenv from requirements file
      pip:
        requirements: "{{ django_stack_deploy_dir }}/requirements.txt"
        virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
        virtualenv_python: python3
      notify: Restart Gunicorn

  rescue:
    - name: Setup virtualenv from requirements file
      pip:
        requirements: "{{ django_stack_deploy_dir }}/requirements.txt"
        virtualenv_python: python3
        executable: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/pip"
      notify: Restart Gunicorn
  become_user: "{{ django_stack_gcorn_user }}"

- name: Drop credentials in virtualenv environment
  lineinfile:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/environment"
    line: "{{ item.env }}={{ item.val }}"
    create: yes
  no_log: True
  with_items:
    - env: DJANGO_DB_USER
      val: "{{ django_db_user }}"
    - env: DJANGO_DB_PASSWORD
      val: "{{ django_db_password }}"
    - env: DJANGO_DB_HOST
      val: "{{ django_db_host }}"
    - env: DJANGO_DB_PORT
      val: "{{ django_db_port }}"
    - env: DJANGO_SECRET_KEY
      val: "{{ django_secret_key }}"
    - env: DJANGO_SETTINGS_MODULE
      val: "{{ django_stack_gcorn_app_settings }}"
    - env: DJANGO_STATIC_ROOT
      val: "{{ django_stack_static_root }}"
  notify: Restart Gunicorn


- name: Ensure environment gets called upon venv activation
  lineinfile:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/activate"
    line: ". {{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/environment"

- block:
  - name: Database initialization and misc tasks
    django_manage:
      command: "{{ item }}"
      app_path: "{{ django_stack_deploy_dir }}"
      settings: "{{ django_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    with_items:
      - migrate
      - collectstatic

  - name: Create superuser
    django_manage:
      command: >
        createsuperuser --noinput --username={{ django_stack_superuser_admin }}
        --email={{ django_stack_superuser_email }}
      app_path: "{{ django_stack_deploy_dir }}"
      settings: "{{ django_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    ignore_errors: yes

  become_user: "{{ django_stack_gcorn_user }}"
  environment:
    DJANGO_DB_USER: "{{ django_db_user }}"
    DJANGO_DB_PASSWORD: "{{ django_db_password }}"
    DJANGO_DB_HOST: "{{ django_db_host }}"
    DJANGO_DB_PORT: "{{ django_db_port }}"
    DJANGO_SECRET_KEY: "{{ django_secret_key }}"
    DJANGO_STATIC_ROOT: "{{ django_stack_static_root }}"
