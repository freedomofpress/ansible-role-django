---
- set_fact:
    django_venv_vars: "{{ django_stack_gunicorn_default_envs|combine(django_stack_gunicorn_opt_envs) }}"

- name: Install system dependencies
  package:
    name: "{{ item }}"
  with_items: ["{{ django_stack_pkgs }}"]
  tags: ['pkgs']

- name: Global optional python dependencies
  pip:
    name: "{{ item.name }}"
    virtualenv_python: "{{ item.python }}"
  with_items: ["{{ django_stack_optional_pip }}"]

- name: Check if virtualenv folder exists
  stat:
    path: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
  register: venv_folder

- name: Create virtualenv and ensure base packages installed
  pip:
    name: "{{ item }}"
    virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    virtualenv_python: "{{ django_stack_venv_python }}"
    virtualenv_site_packages: "{{ django_stack_venv_sitepackage }}"
    extra_args: "-U"
  with_items: "{{ ['pip'] + django_stack_venv_base_pkgs }}"
  become_user: "{{ django_stack_gcorn_user }}"

- name: Setup virtualenv from requirements file
  pip:
    requirements: "{{ django_stack_app_dir }}/requirements.txt"
    virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    virtualenv_python: "{{ django_stack_venv_python }}"
    virtualenv_site_packages: "{{ django_stack_venv_sitepackage }}"
    extra_args: "-U --upgrade-strategy only-if-needed"
  notify: Restart Gunicorn
  when: "git_pull_register.changed or not venv_folder.stat.exists or django_stack_force_refresh"
  become_user: "{{ django_stack_gcorn_user }}"

- name: Ensure environment parameters are sufficiently exported
  lineinfile:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/activate"
    line: "set -a"
    create: yes

- name: Ensure environment gets called upon venv activation
  lineinfile:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/activate"
    line: ". {{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/environment"
    insertafter: "^set -a"

- name: Drop credentials in virtualenv environment
  template:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/environment"
    src: environment.j2
  no_log: true
  notify: Restart Gunicorn

- block:
  # Designed to only be one once per install
  - name: Django optional pre db commands
    django_manage:
      command: "{{ item }}"
      app_path: "{{ django_stack_app_dir }}"
      settings: "{{ django_stack_gcorn_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    with_items: ["{{ django_stack_manage_pre }}"]
    ignore_errors: yes
    when: not venv_folder.stat.exists

  - name: Database migrate and other idempotent tasks
    django_manage:
      command: "{{ item }}"
      app_path: "{{ django_stack_app_dir }}"
      settings: "{{ django_stack_gcorn_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    with_items: "{{ django_stack_db_tasks }}"
    register: database_register
    notify: Restart Gunicorn

  # Designed to only be one once per install
  - name: Django optional post db commands
    django_manage:
      command: "{{ item }}"
      app_path: "{{ django_stack_app_dir }}"
      settings: "{{ django_stack_gcorn_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    with_items: ["{{ django_stack_manage_post }}"]
    ignore_errors: yes
    when: not venv_folder.stat.exists

  become_user: "{{ django_stack_gcorn_user }}"
  environment: "{{ django_venv_vars }}"
