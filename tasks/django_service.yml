---

- name: Install system dependencies
  package:
    name: "{{ item }}"
  with_items: ["{{ django_stack_pkgs }}"]
  tags: ['pkgs']

- block:
    - name: Setup virtualenv from requirements file
      pip:
        requirements: "{{ django_stack_app_dir }}/requirements.txt"
        virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
        virtualenv_python: "{{ django_stack_venv_python }}"
      notify: Restart Gunicorn

  rescue:
    - name: Setup virtualenv from requirements file
      pip:
        requirements: "{{ django_stack_app_dir }}/requirements.txt"
        virtualenv_python: "{{ django_stack_venv_python }}"
        executable: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/pip"
      notify: Restart Gunicorn
  become_user: "{{ django_stack_gcorn_user }}"

- name: Drop credentials in virtualenv environment
  lineinfile:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/environment"
    line: "{{ item.key }}={{ item.value }}"
    create: yes
  no_log: True
  with_dict: "{{ django_stack_gunicorn_envs }}"
  notify: Restart Gunicorn


- name: Ensure environment gets called upon venv activation
  lineinfile:
    dest: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/activate"
    line: ". {{ django_stack_gcorn_home }}/{{ django_stack_app_name }}/bin/environment"

- block:
  - name: Database initialization and misc tasks
    django_manage:
      command: "{{ item }}"
      app_path: "{{ django_stack_app_dir }}"
      settings: "{{ django_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    with_items:
      - migrate
      - collectstatic

  - name: Create superuser
    django_manage:
      command: >
        createsuperuser --noinput --username={{ django_stack_superuser_admin }}
        --email={{ django_stack_superuser_email }}
      app_path: "{{ django_stack_app_dir }}"
      settings: "{{ django_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    ignore_errors: yes

  - name: Django optional post commands
    django_manage:
      command: "{{ item }}"
      app_path: "{{ django_stack_app_dir }}"
      settings: "{{ django_app_settings }}"
      virtualenv: "{{ django_stack_gcorn_home }}/{{ django_stack_app_name }}"
    with_items: ["{{ django_stack_manage_post }}"]
    ignore_errors: yes

  become_user: "{{ django_stack_gcorn_user }}"
  environment: "{{ django_stack_gunicorn_envs }}"
